local repo = 'https://raw.githubusercontent.com/Cold-Script/LinoriaLib/refs/heads/patch-3/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = getgenv().Linoria.Options
local Toggles = getgenv().Linoria.Toggles

local Window = Library:CreateWindow({
	Title = 'ðŸŽƒ YOUHUB - Halloween | Doors Version : 5',
	Center = true,
	AutoShow = true,
	Resizable = true,
	ShowCustomCursor = true,
	TabPadding = 8,
        NotifySide = "Right",
	MenuFadeTime = 0.2
})
local Tab = {
  Main = Window:AddTab("Main"),
  Exploit = Window:AddTab("Exploits"),
  Players = Window:AddTab("Players"),
  Visual = Window:AddTab("Visual"),
  Configs = Window:AddTab("Configs")
}
--// Local Service \\
local EntityFolder = if not game:GetService("ReplicatedStorage"):WaitForChild("GameData"):WaitForChild("Floor").Value == "Fools" then game:GetService("ReplicatedStorage"):WaitForChild("RemotesFolder") else game:GetService("ReplicatedStorage"):WaitForChild("EntityInfo")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character
--// Function \\
function Alert(text)
Library:Notify("[ Alert ] : " .. text)
end
--// Script \\
local GamePlay = Tab.Main:AddLeftGroupbox("Game-Play")
GamePlay:AddToggle("MyToggle",{
Text = "Auto Revive",
Default = false,
Tooltip = "When you die you will revive but its not free\nbut Super then its free.",
Callback = function(v)
_G.AutoRevive = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.AutoRevive then
EntityFolder.Revive:FireServer()
Alert("Loading,\nAuto Revive")							
end
end)
end})
GamePlay:AddToggle("MyToggle",{
Text = "Auto Lobby",
Default = false,
Tooltip = "When you die you will have to return to the Lobby",
Callback = function(v)
_G.AutoLobby = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.AutoLobby then
EntityFolder.Lobby:FireServer()
Alert("Loading,\nAuto Lobby")							
end
end)
end})
GamePlay:AddToggle("MyToggle",{
Text = "Auto Shutdown",
Default = false,
Tooltip = "When you die you will have to shutdown out game",
Callback = function(v)
_G.AutoShutdown = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.AutoShutdown then
Alert("Loading,\nAuto Shutdown")
wait(1.5)
game:Shutdown()							
end
end)
end})
local Self = Tab.Main:AddRightGroupbox("Self")
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.OpenDoorFar then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
Self:AddToggle("MyToggle",{
Text = "Door Reach",
Default = false,
Callback = function(v)
_G.OpenDoorFar = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastOpenDoor then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
Self:AddToggle("MyToggle",{
Text = "Fast Door",
Default = false,
Callback = function(v)
_G.FastOpenDoor = v
end})
Self:AddButton({
Text = "Revive",
DoubleClick = true,
Func = function(v)
EntityFolder.Revive:FireServer()
end})
Self:AddButton({
Text = "Return",
DoubleClick = true,
Func = function(v)
EntityFolder.PlayAgain:FireServer()
end})
Self:AddButton({
Text = "Lobby",
DoubleClick = true,
Func = function(v)
EntityFolder.Lobby:FireServer()
end})
Self:AddButton({
Text = "Died",
DoubleClick = true,
Func = function(v)
game.Players.LocalPlayer.Character.Humanoid.Health = 0
end})
Self:AddButton({
Text = "Shutdown",
DoubleClick = true,
Func = function(v)
game:Shutdown()
end})
local Miscellaneous = Tab.Main:AddLeftGroupbox("Miscellaneous")
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
if _G.FastCloset and game.Players.LocalPlayer.Character:GetAttribute("Hiding")==true then 
game:GetService("ReplicatedStorage").EntityInfo.CamLock:FireServer()
end 
end)
Miscellaneous:AddToggle("MyToggle",{
Text = "Closet Exit Fix",
Default = false,
Callback = function(v)
_G.FastCloset = v
end})
Miscellaneous:AddToggle("MyToggle",{
Text = "Disabled Void ROBLOX",
Default = false,
Callback = function(v)
if v then
workspace.FallenPartsDestroyHeight = 0 / 0
else
workspace.FallenPartsDestroyHeight = -50000
end
end})
local Alert = Tab.Main:AddLeftGroupbox("Alert")
local entitynames = {"SeekNewCloneMoving","SeekMoving","DreadMoving","BackdoorLookman","BackdoorRush","GloomPile","Eyes","JeffTheKiller","RushMoving","AmbushMoving","Snare","A60","A120"}
Alert:AddToggle("MyToggle",{
Text = "Alert Entity",
Default = false,
Callback = function(v)
if v then
addconnect = workspace.ChildAdded:Connect(function(v)
if table.find(entitynames,v.Name) then
repeat task.wait() until game.Players.LocalPlayer:DistanceFromCharacter(v:GetPivot().Position) < 1000 or not v:IsDescendantOf(workspace)
if v:IsDescendantOf(workspace) then
if v.Name == "RushMoving" then
Alert("Entity 'Rush' has spawn,\nhide in closets now!")
elseif v.Name == "AmbushMoving" then
Alert("Entity 'Ambush' has spawn,\nhide in closets now!")
elseif v.Name == "A60" then
Alert("Entity 'A60' has spawn,\nhide in a locker!")
elseif v.Name == "A120" then
Alert("Entity 'A120' has spawn,\nhide in a locker!")
elseif v.Name == "JeffTheKiller" then
Alert("Entity 'JeffTheKiller' has spawn,\ncareful with it!")
elseif v.Name == "Eyes" then
Alert("Entity 'Eyes' has spawn,\ndont look at it!")
elseif v.Name == "GloomPile" then
Alert("Entity 'GloomPile' has spawn,\noff light to survival!")
elseif v.Name == "BackdoorRush" then
Alert("Entity 'Blitz' has spawn,\nhide in closets now!")
elseif v.Name == "BackdoorLookman" then
Alert("Entity 'Lookman' has spawn,\nlook under side!")
elseif v.Name == "SeekMoving" then
Alert("Seek Chase,\ngoodluck for you in chase!")
elseif v.Name == "SeekNewCloneMoving" then
Alert("Seek Chase,\ngoodluck for you in chase!")
end
end
end
end)
else
addconnect:Disconnect()
end
end})












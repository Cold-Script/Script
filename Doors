local repo = 'https://raw.githubusercontent.com/Cold-Script/LinoriaLib/refs/heads/patch-3/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()
local Options = getgenv().Linoria.Options
local Toggles = getgenv().Linoria.Toggles

local Window = Library:CreateWindow({
	Title = 'ðŸŽƒ YOUHUB - Halloween | Doors Version : 5.0.2',
	Center = true,
	AutoShow = true,
	Resizable = true,
	ShowCustomCursor = true,
	TabPadding = 8,
        NotifySide = "Right",
	MenuFadeTime = 0.2
})
local Tab = {
  Main = Window:AddTab("Main"),
  Exploit = Window:AddTab("Exploits"),
  Players = Window:AddTab("Players"),
  Visual = Window:AddTab("Visual"),
  Configs = Window:AddTab("Configs")
}
--// Local Service \\
local EntityFolder = game:GetService("ReplicatedStorage"):WaitForChild("RemotesFolder")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character.Humanoid
--// Function \\
_G.AlertVolume = 5
local function Alert(text)
Library:Notify("[ Alert ] : " .. text, _G.AlertTime or 3)
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
end
--// Script \\
--// Tab Main \\
local GamePlay = Tab.Main:AddLeftGroupbox("Game-Play")
GamePlay:AddToggle("MyToggle",{
Text = "Auto Revive",
Default = false,
Tooltip = "When you die you will revive but its not free\nbut Super then its free.",
Callback = function(v)
_G.AutoRevive = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.AutoRevive then
EntityFolder.Revive:FireServer()
Alert("Loading,\nAuto Revive")							
end
end)
end})
GamePlay:AddToggle("MyToggle",{
Text = "Auto Lobby",
Default = false,
Tooltip = "When you die you will have to return to the Lobby",
Callback = function(v)
_G.AutoLobby = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.AutoLobby then
EntityFolder.Lobby:FireServer()
Alert("Loading,\nAuto Lobby")							
end
end)
end})
GamePlay:AddToggle("MyToggle",{
Text = "Auto Shutdown",
Default = false,
Tooltip = "When you die you will have to shutdown out game",
Callback = function(v)
_G.AutoShutdown = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.AutoShutdown then
Alert("Loading,\nAuto Shutdown")
wait(1.5)
game:Shutdown()							
end
end)
end})
local Self = Tab.Main:AddRightGroupbox("Self")
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.OpenDoorFar then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
Self:AddToggle("MyToggle",{
Text = "Door Reach",
Default = false,
Tooltip = "Open doors it 'Far' on gameplay",
Callback = function(v)
_G.OpenDoorFar = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastOpenDoor then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
Self:AddToggle("MyToggle",{
Text = "Fast Door",
Default = false,
Tooltip = "Open doors it 'Fastter' on gameplay",
Callback = function(v)
_G.FastOpenDoor = v
end})
Self:AddButton({
Text = "Revive",
DoubleClick = true,
Tooltip = "Press to 'Revive' you (not free),\n--Its free in Super Hard Mode",
Func = function(v)
EntityFolder.Revive:FireServer()
end})
Self:AddButton({
Text = "Return",
DoubleClick = true,
Tooltip = "Press to 'Next Play' game",
Func = function(v)
EntityFolder.PlayAgain:FireServer()
end})
Self:AddButton({
Text = "Lobby",
DoubleClick = true,
Tooltip = "Press to return to 'Lobby' of game",
Func = function(v)
EntityFolder.Lobby:FireServer()
end})
Self:AddButton({
Text = "Died",
DoubleClick = true,
Tooltip = "Press to 'Died' in game",
Func = function(v)
game.Players.LocalPlayer.Character.Humanoid.Health = 0
end})
Self:AddButton({
Text = "Shutdown",
DoubleClick = true,
Tooltip = "Press to 'Shutdown' game",
Func = function(v)
game:Shutdown()
end})
local Miscellaneous = Tab.Main:AddLeftGroupbox("Miscellaneous")
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
if _G.FastCloset and game.Players.LocalPlayer.Character:GetAttribute("Hiding")==true then 
game:GetService("ReplicatedStorage").EntityInfo.CamLock:FireServer()
end 
end)
Miscellaneous:AddToggle("MyToggle",{
Text = "Closet Exit Fix",
Default = false,
Tooltip = "Its fixed 'Closets' error",
Callback = function(v)
_G.FastCloset = v
end})
Miscellaneous:AddToggle("MyToggle",{
Text = "Disabled Void ROBLOX",
Default = false,
Tooltip = "Disabled 'Void' from ROBLOX",
Callback = function(v)
if v then
workspace.FallenPartsDestroyHeight = 0 / 0
else
workspace.FallenPartsDestroyHeight = -50000
end
end})
local Alert = Tab.Main:AddLeftGroupbox("Alert")
Alert:AddToggle("MyToggle",{
Text = "Alert Entity",
Default = false,
Tooltip = "Alert 'Entity' when it spawn",
Callback = function(v)
if v then
local Entity = {"SeekNewCloneMoving","SeekMoving","BackdoorLookman","BackdoorRush","GloomPile","Eyes","JeffTheKiller","RushMoving","AmbushMoving","Snare","A60","A120"}
addconnect = workspace.ChildAdded:Connect(function(v)
if table.find(Entity,v.Name) then
repeat task.wait() until game.Players.LocalPlayer:DistanceFromCharacter(v:GetPivot().Position) < 1000 or not v:IsDescendantOf(workspace)
if v:IsDescendantOf(workspace) then
if v.Name == "RushMoving" then
Library:Notify("[ Alert ] : Entity 'Rush' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "AmbushMoving" then
Library:Notify("[ Alert ] : Entity 'Ambush' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "A60" then
Library:Notify("[ Alert ] : Entity 'A60' has spawn,\nhide in a locker!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "A120" then
Library:Notify("[ Alert ] : Entity 'A120' has spawn,\nhide in a locker!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "JeffTheKiller" then
Library:Notify("[ Alert ] : Entity 'JeffTheKiller' has spawn,\ncareful with it!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "Eyes" then
Library:Notify("[ Alert ] : Entity 'Eyes' has spawn,\ndont look at it!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "GloomPile" then
Library:Notify("[ Alert ] : Entity 'GloomPile' has spawn,\noff light to survival!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "BackdoorRush" then
Library:Notify("[ Alert ] : Entity 'Blitz' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "BackdoorLookman" then
Library:Notify("[ Alert ] : Entity 'Lookman' has spawn,\nlook under side!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "SeekMoving" then
Library:Notify("[ Alert ] : Seek Chase,\ngoodluck for you in chase!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "SeekNewCloneMoving" then
Library:Notify("[ Alert ] : Seek Chase,\ngoodluck for you in chase!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
end
end
end
end)
else
addconnect:Disconnect()
end
end})
Alert:AddToggle("MyToggle",{
Text = "Sound Alert",
Default = false,
Tooltip = "Enabled 'Sound' from Alert",
Callback = function(v)
_G.SoundAlert = v
end})
Alert:AddDivider()
Alert:AddSlider("MyToggle",{
Text = "Alert Volume",
Default = 5,
Min = 1,
Max = 5,
Tooltip = "Select 'Volume' from Alert",
Compact = true,
Rounding = 1,
Callback = function(v)
_G.AlertVolume = v
end})
Alert:AddSlider("MyToggle",{
Text = "Alert Time",
Default = 3,
Min = 3,
Max = 5,
Tooltip = "Select 'time' from Alert",
Compact = true,
Rounding = 1,
Callback = function(v)
_G.AlertTime = v
end})
local Automation = Tab.Main:AddRightGroupbox("Automation")
Automation:AddToggle("MyToggle",{
Text = "Complete Breaker Electric",
Default = false,
Tooltip = "Complete 'Breaker Electric' from room 100",
Callback = function(v)
game:GetService("RunService").RenderStepped:Connect(function()
EntityFolder.EBF:FireServer()
end)
end})
Automation:AddButton({
Text = "Complete Padlock Unlock",
Tooltip = "Complete 'Code' from Library",
Func = function()
local Floor = game:GetService("ReplicatedStorage").GameData.Floor
local Paper = workspace:FindFirstChild("LibraryHintPaper",true) or workspace:FindFirstChild("LibraryHintPaperHard",true) or Players:FindFirstChild("LibraryHintPaper",true) or Players:FindFirstChild("LibraryHintPaperHard",true)
if not Paper then
Library:Notify("[ Alarm ] : Someone needs to have the Hint Paper to use this.")
return
end
local HintsNeeded = Floor.Value == "Fools" and 8 or 3
local Hints = 0
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
if Collected:IsA("ImageLabel") then
for _,Icon in pairs(Paper.UI:GetChildren()) do
if tonumber(Icon.Name) then
if Icon.ImageRectOffset == Collected.ImageRectOffset then
Hints += 1
end
end
end
end
end
end
if Hints < HintsNeeded then
Library:Notify("[ Alert ] : You need to collect at least " .. HintsNeeded - Hints .. " more correct hint" .. (Hints ~= 2 and "s" or "") .. " to use this.")
return
end
local t = {}
for i = 1, Floor.Value == "Hotel" and 5 or 10 do
local Icon = Paper.UI[i]
local Number = -1
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
if Collected.ImageRectOffset == Icon.ImageRectOffset then
Number = tonumber(Collected.TextLabel.Text)
end
end
end
table.insert(t,Number)
end
for one=0,t[1]==-1 and 9 or 0 do
for two=0,t[2]==-1 and 9 or 0 do
for three=0,t[3]==-1 and 9 or 0 do
for four=0,t[4]==-1 and 9 or 0 do
for five=0,t[5]==-1 and 9 or 0 do
if Floor.Value == "Fools" then
for six=0,t[6]==-1 and 9 or 0 do
for seven=0,t[7]==-1 and 9 or 0 do
for eight=0,t[8]==-1 and 9 or 0 do
for nine=0,t[9]==-1 and 9 or 0 do
for ten=0,t[10]==-1 and 9 or 0 do
EntityFolder.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5])..(t[6]==-1 and six or t[6])..(t[7]==-1 and seven or t[7])..(t[8]==-1 and eight or t[8])..(t[9]==-1 and nine or t[9])..(t[10]==-1 and ten or t[10]))
end
end
end
end
end
else
EntityFolder.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5]))
end
end
end
end
end
end
end})
Automation:AddDivider()
Automation:AddToggle("MyToggle",{
Text = "Auto Interact",
Default = false,
Tooltip = "Auto 'Interact'",
Callback = function(v)
_G.AutoLoot = v
if v then
local function setup(room)
local function check(v)
if v:IsA("Model") then
if v.Name == "DrawerContainer" then
local knob = v:WaitForChild("Knobs")
if knob then
local prompt = knob:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(knob.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
end
elseif v.Name == "GoldPile" then
local prompt = v:WaitForChild("LootPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "Door" then
local prompt = v:WaitForChild("Lock"):WaitForChild("UnlockPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "Candy" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "Bandage" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "KeyObtain" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "LiveHintBook" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "LiveBreakerPolePickup" then
local prompt = v:WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "FuseObtain" then
local prompt = v:WaitForChild("Fuse"):WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "MinesGateButton" then
local prompt = v:WaitForChild("Button"):WaitForChild("ModulePrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "Locker_Small" then
local prompt = v:WaitForChild("Door"):WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name:sub(1,8) == "ChestBox" then
local prompt = v:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "RolltopContainer" then
local prompt = v:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")                       
if not interactions then
task.spawn(function()
repeat task.wait(0.1)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
end 
end
end
local subaddcon
subaddcon = room.DescendantAdded:Connect(function(v)
check(v) 
end)            
for i,v in pairs(room:GetDescendants()) do
check(v)
end            
task.spawn(function()
repeat task.wait() until not _G.AutoLoot
subaddcon:Disconnect() 
end)
end        
local addconnect
addconnect = workspace.CurrentRooms.ChildAdded:Connect(function(room)
setup(room)
end)        
for i,room in pairs(workspace.CurrentRooms:GetChildren()) do
if room:FindFirstChild("Assets") then
setup(room) 
end
end        
repeat task.wait() until not _G.AutoLoot
addconnect:Disconnect()
end
end})
--// Tab Exploit \\
local TabboxExploit = Tab.Exploit:AddLeftTabbox()
local AntiEntity = TabboxExploit:AddTab("Anti-Entity")
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiSnare then
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("Snare") then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):GetChildren()) do 
if v.Name == "Snare" then 
v.Hitbox.CanTouch = false
end 
end 
end 
end 
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Snare",
Default = false,
Tooltip = "Blocked 'Snare' Damage",
Callback = function(v)
_G.AntiSnare = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiChandelier then 
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("ChandelierObstruction") then 
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):GetChildren()) do 
if v.Name == "ChandelierObstruction" then 
v.HurtPart.CanTouch = false
end 
end 
end 
end 
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Chandelier",
Default = false,
Tooltip = "Blocked 'Fire' Damage",
Callback = function(v)
_G.AntiChandelier = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiSeekArms then
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("Seek_Arm") then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):GetChildren()) do 
if v.Name == "Seek_Arm" then 
v.AnimatorPart.CanTouch = false
end 
end 
end 
end 
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Seek Arms",
Default = false,
Tooltip = "Blocked 'Seek Arms' Damage",
Callback = function(v)
_G.AntiSeekArms = v
end})
game:GetService("Workspace").DescendantAdded:Connect(function()
if not _G.AntiEyes then return end
if _G.AntiEyes then 
if workspace:FindFirstChild("Eyes") then 
EntityFolder.MotorReplication:FireServer(0,(_G.AntiEyes and 120) or 0 ,0,false);
end 
end 
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Eyes",
Default = false,
Tooltip = "Blocked 'Eyes' Damage",
Callback = function(v)
_G.AntiEyes = v
end})
game:GetService("Workspace").DescendantAdded:Connect(function()
if not _G.AntiLookman then return end
if _G.AntiLookman then 
if workspace:FindFirstChild("BackdoorLookman") then 
EntityFolder.MotorReplication:FireServer(0,(_G.AntiLookman and 120) or 0 ,0,false);
end 
end 
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Lookman",
Default = false,
Tooltip = "Blocked 'Lookman' Damage",
Callback = function(v)
_G.AntiLookman = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.AntiGiggle then
for _, room in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetChildren()) do
if room.Name == "GiggleCeiling" then
room.Hitbox.CanTouch = false
end
end
end
end)
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Giggle",
Default = false,
Tooltip = "Blocked 'Giggle' Damage",
Callback = function(v)
_G.AntiGiggle = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.AntiGloomEgg then
for _, room in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetChildren()) do
if room.Name == "GloomPile" then
room.Egg.CanTouch = false
end
end
end
end)
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Gloom Egg",
Default = false,
Tooltip = "Blocked 'Gloom Egg' Damage",
Callback = function(v)
_G.AntiGloomEgg = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.AntiDam then
local room = workspace.CurrentRooms:FindFirstChild("100")
if room and room:FindFirstChild("_DamHandler") then
local seekFlood = room._DamHandler:FindFirstChild("SeekFloodline")
if _G.AntiDam then
seekFlood.CanCollide = false
seekFlood.CanTouch = false
end
end
end
end)
end)
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Seek Flood",
Default = false,
Tooltip = "Blocked 'Seek Flood' Damage",
Callback = function(v)
_G.AntiDam = v
end})
AntiEntity:AddToggle("MyToggle",{
Text = "Anti-Banana",
Default = false,
Tooltip = "Blocked Slip 'Banana-Peel'",
Callback = function(v)
_G.AntiBanana = v
while _G.AntiBanana do wait(1)
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "BananaPeel" then
v.CanTouch = false
end
end
end
end})
local RemoveEntity = TabboxExploit:AddTab("Removal-Entity")
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Screech [FE]",
Default = false,
Tooltip = "Remove 'Screech'",
Callback = function(v)
if v then
EntityFolder.Screech.Name = "_Screech"
else
EntityFolder._Screech.Name = "Screech"
end
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-A90",
Default = false,
Tooltip = "Remove 'A90'",
Callback = function(v)
if v then
EntityFolder.A90.Name = "_A90"
game.Players.LocalPlayer.PlayerGui:WaitForChild("MainUI"):WaitForChild("Jumpscare"):FindFirstChild("Jumpscare_A90").Parent = nil
else
EntityFolder._A90.Name = "A90"
game.Players.LocalPlayer.PlayerGui:WaitForChild("MainUI"):WaitForChild("Jumpscare"):FindFirstChild("Jumpscare_A90").Parent = game.Players.LocalPlayers.PlayerGui.MainUI.Jumpscare
end
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Dread",
Default = false,
Tooltip = "Remove 'Dread'",
Callback = function(v)
if v then
game.Players.LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_Dread.Parent = "MÃ¨o BÃ©o KhÃ´ng ThÃ­ch Ä‚n Rau"
EntityFolder.Dread.Name = "_Dread"
else
EntityFolder._Dread.Name = "Dread"
end
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Haste JC",
Default = false,
Tooltip = "Remove 'Haste Jumpcare'",
Callback = function(v)
if v then
EntityFolder.Haste.Name = "_Haste"
else
EntityFolder._Haste.Name = "Haste"
end
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Halt",
Default = false,
Tooltip = "Remove 'Halt'",
Callback = function(v)
_G.AntiHalt = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiHalt then
game:GetService("ReplicatedStorage").ClientModules.EntityModules.Shade.Parent = game.Workspace
else
game.Workspace.Shade.Parent = game:GetService("ReplicatedStorage").ClientModules.EntityModules
end
end)
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Seek Trigger [FE]",
Default = false,
Tooltip = "Remove 'Seek Trigger'",
Callback = function(v)
_G.SeekChase = v
while _G.SeekChase do wait(1)
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "TriggerEventCollision" then
Alert("Seek Trigger Delete, The Chase is Easy")
v:Destroy()
end
end
end
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Scene Minecart [FE]",
Default = false,
Tooltip = "Remove 'Scene Minecart'",
Callback = function(v)
_G.RemovalMinecart = v
while _G.RemovalMinecart do wait(1)
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "MinecartCollision" then
v:Destroy()
end
end
end
end})
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Bat Hang",
Default = false,
Tooltip = "Remove 'Bat Hang'",
Callback = function(v)
if v then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v:IsA("Model") and v.Name == "HangingHalloweenDecor" then
v:Destroy()
end
end
NoBat = workspace.CurrentRooms.ChildAdded:Connect(function(child)
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v:IsA("Model") and v.Name == "HangingHalloweenDecor" then
v:Destroy()
end
end
end)
else
NoBat:Disconnect()
end
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.RemovalLight then 
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("Chandelier") then
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets").Chandelier:Destroy()
end 
end 
end)
end)
game:GetService("RunService").RenderStepped:Connect(function()pcall(function()
if _G.RemovalLight then 
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("Light_Fixtures") then 
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets").Light_Fixtures:Destroy()
end 
end 
end)
end)
RemoveEntity:AddToggle("MyToggle",{
Text = "Removal-Light (FPS Booster)",
Default = false,
Tooltip = "Remove 'Light'",
Callback = function(v)
_G.RemovalLight = v
end})
local Bypass = Tab.Exploit:AddRightGroupbox("Bypass")
local speedBoost, speedBoostFinished, speed = 30, false, false
if bypass then
if collisionClone then collisionClone:Destroy() end
speed = true       
local originalSpeed = SpeedBypass
repeat task.wait()
if not SpeedBypass then
SpeedBypass:SetValue(true)
end
until speedBoostFinished
SpeedBypass:SetValue(originalSpeed)
else
if not collisionClone then
collisionClone = Character.Collision:Clone() do
collisionClone.CanCollide = false
collisionClone.Massless = true
collisionClone.Name = "CollisionClone"
if collisionClone:FindFirstChild("CollisionCrouch") then
collisionClone.CollisionCrouch:Destroy()
end   
collisionClone.Parent = Character    
end
end
task.spawn(function()  
while not speedBoostFinished do
collisionClone.Massless = not collisionClone.Massless
task.wait(_G.BypassTime or 2)
end           
collisionClone.Massless = true                  
end)
end
Bypass:AddSlider("MyToggle",{
Text = "Repeat time bypass",
Default = 0.25,
Min = 0.2,
Max = 0.25,
Tooltip = "Select 'time' from Speed Bypass",
Compact = true,
Rounding = 1,
Callback = function(v)
_G.BypassTimeCore = v
end})
Bypass:AddToggle("MyToggle",{
Text = "Speed Bypass",
Default = false,
Tooltip = "Enabled 'Speed Bypass'",
Callback = function(v)
if v then
_G.BypassTime = _G.BypassTimeCore or 0.25
else
_G.BypassTime = 2
end
end})
Bypass:AddDivider()
Bypass:AddSlider("MyToggle",{
Text = "Max Greed Bypass",
Default = 0,
Min = 0,
Max = 5,
Tooltip = "Select 'Get Gold' from Greed",
Compact = true,
Rounding = 1,
Callback = function(v)
_G.MaxGreedCore = v
end})
Bypass:AddToggle("MyToggle",{
Text = "Greed bypass",
Default = false,
Tooltip = "Enabled 'GreedBypass'",
Callback = function(v)
_G.MaxGreed = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.MaxGreed then
game.Players.LocalPlayer:SetAttribute("Greed", _G.MaxGreedCore)
end
end)
end})
local ControlEntityMove = Tab.Exploit:AddRightGroupbox("Control Entity Move")
ControlEntityMove:AddToggle("MyToggle",{
Text = "Jeff Flighting [FE]",
Default = false,
Tooltip = "Jeff can 'Fly'",
Callback = function(v)
_G.JeffFlighting = v
while _G.JeffFlighting do wait()
for _, v in pairs(workspace:GetChildren()) do
if v.Name == "JeffTheKiller" then
v:PivotTo(v:GetPivot() * CFrame.new(0, 2, 0) * CFrame.Angles(0, math.rad(10), 0))
v.HumanoidRootPart.CanCollide = false
end
end
end
end})
ControlEntityMove:AddToggle("MyToggle",{
Text = "Figure Flighting [FE]",
Default = false,
Tooltip = "Now Figure can 'Fly'",
Callback = function(v)
_G.FigureFlighting = v
while _G.FigureFlighting do wait()
for _, v in pairs(workspace:GetDescendants()) do
if v.Name == "FigureRig" then
v:PivotTo(v:GetPivot() * CFrame.new(0, 5, 0) * CFrame.Angles(0, math.rad(10), 0))
elseif v.Name == "FigureRagdoll" then
v:PivotTo(v:GetPivot() * CFrame.new(0, 5, 0) * CFrame.Angles(0, math.rad(10), 0))
end
end
end
end})
--// Players Tab \\
local Players = Tab.Players:AddLeftGroupbox("Players")
Players:AddSlider("MyToggle",{
Text = "Select Speed",
Default = 15,
Min = 15,
Max = 50,
Tooltip = "Select 'Speed' for you",
Compact = true,
Rounding = 1,
Callback = function(v)
_G.Speed = v
end})
Players:AddToggle("MyToggle",{
Text = "Enabled Speed",
Default = false,
Tooltip = "Enabled 'Speed' for you",
Callback = function(v)
_G.EnabledSpeed = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledSpeed then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.Speed or 15
else
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 15
end
end)
end})
Players:AddDivider()
Players:AddToggle("MyToggle",{
Text = "Instance Interact",
Default = false,
Tooltip = "No 'Hold'",
Callback = function(v)
_G.InstanceInteract = v
if _G.InstanceInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
end)
else
InstanceInteract:Disconnect()
end
end})
Players:AddToggle("MyToggle",{
Text = "Through Interact",
Default = false,
Tooltip = "Interact 'Through'",
Callback = function(v)
_G.CrossInteraction = v
if _G.CrossInteraction then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
CrossInteraction = workspace.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = true
end
end
CrossInteraction:Disconnect()
end
end})
Players:AddToggle("MyToggle",{
Text = "Reach Interact",
Default = false,
Tooltip = "Interact 'Far'",
Callback = function(v)
_G.RangeInteraction = v
if _G.RangeInteraction then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 15
end
end
RangeInteraction = workspace.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 15
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 5
end
end
RangeInteraction:Disconnect()
end
end})
local Evole = Tab.Players:AddRightGroupbox("Evole")
Evole:AddToggle("MyToggle",{
Text = "Reduce Gravity",
Default = false,
Tooltip = "Reduce 'Gravity'",
Callback = function(v)
_G.SlowJump = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.SlowJump then
workspace.Gravity = 50
else
workspace.Gravity = 90
end
end)
end})
Evole:AddToggle("MyToggle",{
Text = "No Acceleration",
Default = false,
Tooltip = "No 'Acceleration'",
Callback = function(v)
_G.NoSlow = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Head.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LowerTorso.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.UpperTorso.Massless = not _G.NoSlow;
end)
end})
Evole:AddToggle("MyToggle",{
Text = "Noclip",
Default = false,
Tooltip = "You can 'Noclip Wall'",
Callback = function(v)
_G.Noclip = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Collision.CanCollide = not _G.Noclip
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = not _G.Noclip
end)
end})
Evole:AddDivider()
Evole:AddToggle("MyToggle",{
Text = "Can Jump",
Default = false,
Tooltip = "Can 'Jump'",
Callback = function(v)
_G.Jump = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character:SetAttribute("CanJump", _G.Jump)
end)
end})
Evole:AddToggle("MyToggle",{
Text = "Auto Jump",
Default = false,
Tooltip = "Auto 'Jump'",
Callback = function(v)
_G.AutoJump = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoJump then
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end
end)
end})
--// Visual Tab \\
local World = Tab.Visual:AddLeftGroupbox("World")
World:AddSlider("MyToggle",{
Text = "Select Field Of View",
Default = 70,
Min = 70,
Max = 120,
Tooltip = "Select 'Field Of View' for you",
Compact = true,
Rounding = 1,
Callback = function(v)
_G.FieldOfView = v
end})
World:AddToggle("MyToggle",{
Text = "Field Of View",
Default = false,
Tooltip = "Enabled 'Field Of View'",
Callback = function(v)
_G.Field = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.Field then
workspace.CurrentCamera.FieldOfView = _G.FieldOfView or 70
else
workspace.CurrentCamera.FieldOfView = 70
end
end)
end})
World:AddDivider()
World:AddDropdown('MyDropdown',{
	Values = {"Diagonal", "MaxAxis", "Vertical"},
	Default = 1,
	Multi = false,
	Text = 'Field Of View Mode',
	Tooltip = "Select 'Field Of View'",
	Callback = function(v)
workspace.CurrentCamera.FieldOfViewMode = v
end})
World:AddSlider("MyToggle",{
Text = "Select Diagonal",
Default = 170,
Min = 170,
Max = 300,
Tooltip = "Select 'Diagonal' for you",
Compact = true,
Rounding = 1,
Callback = function(v)
game:GetService("RunService").RenderStepped:Connect(function()
workspace.CurrentCamera.DiagonalFieldOfView = v or 170
end)
end})
World:AddSlider("MyToggle",{
Text = "Select Max Axis",
Default = 140,
Min = 140,
Max = 300,
Tooltip = "Select 'Max Axis' for you",
Compact = true,
Rounding = 1,
Callback = function(v)
game:GetService("RunService").RenderStepped:Connect(function()
workspace.CurrentCamera.MaxAxisFieldOfView = v or 140
end)
end})
World:AddDivider()
World:AddToggle("MyToggle",{
Text = "No Shake Camera",
Default = false,
Tooltip = "Enabled 'No Shake Camera'",
Callback = function(v)
if v then
EntityFolder.CamShake.Name = "_CamShake"
else
EntityFolder._CamShake.Name = "CamShake"
end
end})
local Lighting = Tab.Visual:AddRightGroupbox("Lighting")
Lighting:AddLabel("Ambient"):AddColorPicker('ColorPicker',{
	Default = Color3.new(1, 1, 1),
	Title = 'Ambient Color',
	Transparency = 0,
	Callback = function(v)
_G.ColorAmbient = v
end})
Lighting:AddToggle("MyToggle",{
Text = "Fullbright",
Default = false,
Tooltip = "Enabled 'Brightness'",
Callback = function(v)
if v then
game.Lighting.Brightness = 1.5
game.Lighting.GlobalShadows = false
game.Lighting.OutdoorAmbient = Color3.new(1,1,1)
else
game.Lighting.Brightness = 1
game.Lighting.GlobalShadows = true
game.Lighting.OutdoorAmbient = Color3.new(0,0,0)
end
end})
Lighting:AddToggle("MyToggle",{
Text = "No Fog Floor",
Default = false,
Tooltip = "Enabled 'No Fog' in floor",
Callback = function(v)
if v then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do if v.Name == "Parts" then v.Floor.ThickFog:Destroy() v.Floor.ThinFog:Destroy() end end
NoFogFloor = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do if v.Name == "Parts" then v.Floor.ThickFog:Destroy() v.Floor.ThinFog:Destroy() end end
end)
else
NoFogFloor:Disconnect()
end
end})
Lighting:AddToggle("MyToggle",{
Text = "No Fog",
Default = false,
Tooltip = "Enabled 'No Fog'",
Callback = function(v)
pcall(function()
if not game.Lighting:GetAttribute("FogStart") then game.Lighting:SetAttribute("FogStart", game.Lighting.FogStart) end
if not game.Lighting:GetAttribute("FogEnd") then game.Lighting:SetAttribute("FogEnd", game.Lighting.FogEnd) end
game.Lighting.FogStart = value and 0 or game.Lighting:GetAttribute("FogStart")
game.Lighting.FogEnd = value and math.huge or game.Lighting:GetAttribute("FogEnd")
local fog = game.Lighting:FindFirstChildOfClass("Atmosphere")
if fog then
if not fog:GetAttribute("Density") then fog:SetAttribute("Density", fog.Density) end
fog.Density = value and 0 or fog:GetAttribute("Density")
end
end)
end})
